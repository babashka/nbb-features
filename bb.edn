{:paths ["script"]
 :deps
 {nbb.build/nbb.build
  {:git/url "https://github.com/babashka/nbb"
   :git/sha "fe8b3ebd49f093f108d0f3c213ab9db2a715b00e"
   :deps/root "build"}
  #_{:local/root "../nbb/build"}
  nbb/nbb
  {:git/url "https://github.com/babashka/nbb"
   :git/sha "fe8b3ebd49f093f108d0f3c213ab9db2a715b00e"}
  #_{:local/root "../nbb"}
  datascript/deps {:local/root "features/datascript"}
  datascript-transit/deps {:local/root "features/datascript-transit"}
  linked/deps {:local/root "features/linked"}}
 :tasks
 {:requires ([babashka.fs :as fs]
             [nbb.build :as build]
             [clojure.string :as str])

  clean (fs/delete-tree "lib")

  release {:depends [clean]
           :doc "Compiles release build."
           :task (build/release *command-line-args*)}

  test nbb-feature-tests/main

  update-nbb
  {:desc "Update to latest nbb tag"
   :extra-deps {borkdude/rewrite-edn {:mvn/version "0.2.0"}}
   :requires ([borkdude.rewrite-edn :as r])
   :task
   (let [update-bb-dep
         (fn [dep dep-map]
           (let [nodes (-> "bb.edn" slurp r/parse-string)]
             (spit "bb.edn"
                   (str (reduce (fn [acc [k v]]
                                  (r/assoc-in acc [:deps dep k] v))
                                nodes
                                dep-map)))))
         [_ sha tag]
         (->> (shell {:out :string} "git ls-remote --heads --tags https://github.com/babashka/nbb.git")
              :out
              str/split-lines
              last
              (re-matches (re-pattern "(\\S+)\\trefs/tags/([v.0-9]+).*")))]
     (assert (and sha tag) "Sha and tag must exist to continue")
     (update-bb-dep 'nbb/nbb {:git/sha sha :git/tag tag})
     (update-bb-dep 'nbb.build/nbb.build {:git/sha sha})
     (println "Update nbb to" tag)
     (shell "git commit -m" (str "Update nbb to " tag) "."))}}}
